<?xml version="1.0" encoding="UTF-8"?>

<project
name="Composer"
default="run"
basedir="."
xmlns:if="ant:if"
xmlns:unless="ant:unless">

<path id="classpath.test">
  <pathelement location="${user.home}/.ant/lib/ant-junit.jar"/>
  <pathelement location="${user.home}/.ant/lib/junit.jar"/>
  <pathelement location="build/tests"/>
  <pathelement location="build/classes"/>
</path>

<available classname="org.junit.runner.Runner" property="junit.installed"/>
<available classname="org.hamcrest.SelfDescribing" property="hamcrest.installed"/>

<condition property="libs.installed">
  <and>
    <isset property="junit.installed"/>
    <isset property="hamcrest.installed"/>
  </and>
</condition>

<target name="init" depends="install-junit" description="Create directories and install libraries">
  <mkdir dir="src" />
  <mkdir dir="build/classes" />
  <mkdir dir="reports" />
  <mkdir dir="build/tests" />
</target>

<target name="install-junit" unless="libs.installed" >
  <mkdir dir="${user.home}/.ant/lib"/>
  <get dest="${user.home}/.ant/lib/hamcrest-core.jar" src="http://search.maven.org/remotecontent?filepath=org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar" unless:set="hamcrest.installed"/>
  <get dest="${user.home}/.ant/lib/ant-junit.jar" src="http://search.maven.org/remotecontent?filepath=org/apache/ant/ant-junit/1.9.6/ant-junit-1.9.6.jar" unless:set="junit.installed"/>
  <get dest="${user.home}/.ant/lib/junit.jar" src="http://search.maven.org/remotecontent?filepath=junit/junit/4.12/junit-4.12.jar" unless:set="junit.installed"/>

  <fail message="Required Libraries installed. Please run the build again"/>
</target>






<target name="compile-test" depends="compile">
  <javac srcdir="tests" destdir="build/tests" verbose="${verbose.output}" includeantruntime="false" debug="on">
    <classpath refid="classpath.test"/>
  </javac>
</target>

<target name="clean-tests">
  <delete dir="build/tests"/>
</target>

<target name="run-tests" depends="compile-test">
  <junit printsummary="no" haltonfailure="no">
    <classpath refid="classpath.test" />

    <batchtest todir="reports">
      <fileset dir="build/tests">
        <include name="**/*Test*" />
      </fileset>
    </batchtest>

    <formatter type="xml" />
    <formatter type="brief" usefile="false"/>

  </junit>
</target>

<target name="test" depends="clean,run-tests" description="Generate Test Report">

  <junitreport todir="reports">
    <fileset dir="reports">
      <include name="TEST-*.xml"/>
    </fileset>
    <report format="frames" todir="reports/html"/>
  </junitreport>

  <delete>
    <fileset dir="reports" includes="TEST*.xml"/>
  </delete>

</target>

    <!-- CLEAN -->
    <target
    name="clean"
    description="Cleans up project (Removes old build files)">
        <delete
        dir="build"/>
        <delete
        dir="reports"/>
        <delete
        dir="javadoc"/>
        <delete><!-- deletes any class files in source -->
            <fileset
            dir="src"
            includes="*.class"/>
        </delete>
    </target>

    <!-- COMPILE -->
    <target
    name="compile"
    depends="clean, init"
    description="Compile the code into classes (build/classes/)">
        <mkdir
        dir="build/classes"/>
        <javac
        includeantruntime="false"
        srcdir="src"
        destdir="build/classes"
        classpath="lib/jogl.jar:lib/gluegen-rt.jar"/>
    </target>

    <!-- JAR -->
    <target
    name="jar"
    depends="compile"
    description="Bundle classes into a single JAR file (build/jar/)">
        <mkdir
        dir="build/jar"/>
        <jar
            destfile="build/jar/Composer.jar"
            basedir="build/classes">
            <fileset dir="resources"/>
            <manifest>
                <attribute
                    name="Main-Class"
                    value="Main"/>
            </manifest>
        </jar>
    </target>


    <!-- RUN -->
    <target
    name="run"
    depends="jar"
    description="Execute Composer">
        <java
            jar="build/jar/Composer.jar"
            fork="true"
            spawn="true">
        </java>
    </target>


    <target name="javadoc" description="Create the JavaDoc API">
        <mkdir
            dir="javadoc"/>
    <javadoc  destdir="javadoc" Windowtitle="QueueLib API"
        private="true">
        <fileset dir="src/composer"/>
        <link href="https://docs.oracle.com/en/java/javase/11/docs/api/"/>
    </javadoc>
</target>

</project>
